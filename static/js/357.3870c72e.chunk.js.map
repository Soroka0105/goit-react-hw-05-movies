{"version":3,"file":"static/js/357.3870c72e.chunk.js","mappings":"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","sources":["api/api.js","components/Loader/index.jsx","components/MovieCard/index.jsx","pages/MoviesPage/MovieDetailsPage/index.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=eb37bb0354bcfe3066179edc2e5626a4';\n\nexport const getMovieWithSearch = async query => {\n  const { data } = await axios(`/search/movie?query=${query}&${API_KEY}`);\n  return data;\n};\n\nexport const getSingleMovie = async id => {\n  const { data } = await axios(`movie/${id}?${API_KEY}`);\n  return data;\n};\n\nexport const getTrendingMovies = async query => {\n  const { data } = await axios(`/trending/all/day?${API_KEY}`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios(`/movie/${id}/reviews?${API_KEY}`);\n  return data;\n};\nexport const getMovieCast = async id => {\n  const { data } = await axios(`/movie/${id}/credits?${API_KEY}`);\n  return data;\n};\n","import { ColorRing } from 'react-loader-spinner'\nexport const Loader = () => {\n    return (\n       <ColorRing\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"blocks-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"blocks-wrapper\"\n  colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n/> \n    )\n}","const MovieCard = ({ obj }) => {\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\nconst {backdrop_path, imdb_id, title, vote_average, overview} = obj\n    return (\n        <>\n            <div>\n                <img src={backdrop_path ? `https://image.tmdb.org/t/p/w500/${backdrop_path\n}`: defaultImg} alt={imdb_id} />\n            </div>\n\n            <div>\n            <p>{title}</p>\n            <p>rating:{vote_average}</p>\n            <span>{overview }</span>\n    </div>\n        </>\n        \n)\n\n}\n\nexport default MovieCard","import { useParams, Link, Outlet, useLocation } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\";\nimport { getSingleMovie } from \"api/api\";\nimport MovieCard from \"components/MovieCard\";\nimport { Loader } from \"components/Loader\";\n\nconst MovieDetailsPage = () => {\n    const [movieObj, setMovieObj] = useState({})\n    const [error, setError] = useState(null)\n    const [loader, setLoader] = useState(false)\n    const { movieId } = useParams(0)\n    const location = useLocation()\n    const back = location?.state?.from ?? '/'\n\n    useEffect(() => {\n        const fetchMovieById = async () => {\n            setLoader(true)\n            try {\n                const data = await getSingleMovie(movieId)\n                setMovieObj(data)\n            } catch (error) {\n                setError(error.message)\n            } finally {\n                setLoader(false)\n            }\n        }\n    fetchMovieById()\n\n        if (!movieId) return\n\n}, [movieId]);\n    \n\n    \n    return (\n        <>\n        <h2>\n      Movie Details\n            </h2>\n            <Link to={back}>Back</Link>\n            {error && <h1>{error}</h1> }\n            {loader ? <Loader/> : <MovieCard obj={movieObj } />}\n             <Link to={'reviews'}>Reviews</Link>\n            <Link to={'cast'}>Cast</Link>\n            <Outlet/>\n        </>\n    \n  )\n}\n\nexport default MovieDetailsPage\n"],"names":["axios","API_KEY","getMovieWithSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","query","_yield$axios","data","_context","prev","next","concat","sent","abrupt","stop","_x","apply","arguments","getSingleMovie","_ref2","_callee2","id","_yield$axios2","_context2","_x2","getTrendingMovies","_ref3","_callee3","_yield$axios3","_context3","_x3","getMovieReviews","_ref4","_callee4","_yield$axios4","_context4","_x4","getMovieCast","_ref5","_callee5","_yield$axios5","_context5","_x5","Loader","_jsx","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","obj","backdrop_path","imdb_id","title","vote_average","overview","_jsxs","_Fragment","children","src","alt","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieObj","setMovieObj","_useState3","_useState4","error","setError","_useState5","_useState6","loader","setLoader","movieId","useParams","location","useLocation","back","state","from","useEffect","fetchMovieById","t0","message","finish","Link","to","MovieCard","Outlet"],"sourceRoot":""}